@model Vidly.ViewModels.MovieFormViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (Model.Movie.Id == 0 || Model.Movie.Id == 0)
{
    <h2 class="mt-3">New Movie</h2>
}
else
{
    <h2 class="mt-3">Edit Movie</h2>
}

<!-- when we use the "using" syntax, it automattically calls a Dispose object, which closes the Html.BeginForm, which is a form tag -->
@using (Html.BeginForm("Save", "Movies"))
{
    @Html.ValidationSummary(true, "Please fix the following errors")
    <div class="form-group my-3">
        @Html.LabelFor(m => m.Movie.Name)
        @Html.TextBoxFor(m => m.Movie.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Movie.Name)
    </div>
    <div class="form-group my-3">
        @Html.LabelFor(m => m.Movie.ReleaseDate)
        @Html.TextBoxFor(m => m.Movie.ReleaseDate, "{0:d MMM yyyy}", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Movie.ReleaseDate)
    </div>
    <div class="form-group my-3">
        @Html.LabelFor(m => m.Movie.GenreId)
        @Html.DropDownListFor(m => m.Movie.GenreId, new SelectList(Model.Genres, "Id", "Name"), "Select Genre", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Movie.GenreId)
    </div>
    <div class="form-group my-3">
        @Html.LabelFor(m => m.Movie.NumberInStock)
        @Html.TextBoxFor(m => m.Movie.NumberInStock, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Movie.NumberInStock)
    </div>

    @Html.HiddenFor(m => m.Movie.Id)
    @Html.AntiForgeryToken()
    <button type="submit" class="btn btn-primary">Save</button>
}

@Html.ActionLink("Back", "Index", "Movies")

@section scripts 
{
    @Scripts.Render("~/bundles/jqueryval")
}